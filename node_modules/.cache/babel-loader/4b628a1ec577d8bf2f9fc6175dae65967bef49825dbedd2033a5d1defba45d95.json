{"ast":null,"code":"var _jsxFileName = \"/Users/olgapomytkina/YandexPraktikum/mesto-react/src/components/Card.js\",\n  _s = $RefreshSig$();\nimport React, { useContext } from 'react';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Card(props) {\n  _s();\n  const {\n    card,\n    onCardClick,\n    onCardLike,\n    onCardDelete\n  } = props;\n\n  // подписываемся на контекст\n  const currentUser = useContext(CurrentUserContext);\n\n  // определяем, являемся ли мы владельцем карточки\n  const isOwn = card.owner._id === currentUser._id;\n\n  // определяем постановку нами лайка карточке\n  const isLiked = card.likes.some(like => like._id === currentUser._id);\n\n  // определяем класс для кнопки лайка\n  const cardLikeButtonClassName = `photo-grid__like-button ${isLiked ? 'photo-grid__like-button_active' : ''}`;\n\n  // определяем класс для удаления карточки\n  const cardDeleteButtonClassName = ` ${isOwn ? 'photo-grid__delete-button' : ''}`;\n  const handleCardClick = () => {\n    onCardClick(card);\n  };\n  const handleLikeClick = () => {\n    onCardLike(card);\n  };\n  const handleDeleteClick = () => {\n    onCardDelete(card);\n    setCards(prevCards => prevCards.filter);\n  };\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"photo-grid__item card-element\",\n    children: [isOwn && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: cardDeleteButtonClassName,\n      type: \"button\",\n      onClick: handleDeleteClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      alt: card.name,\n      src: card.link,\n      className: \"photo-grid__image\",\n      onClick: handleCardClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"photo-grid__item-description\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"photo-grid__item-name\",\n        children: card.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"photo-grid__like\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: cardLikeButtonClassName,\n          type: \"button\",\n          onClick: handleLikeClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"photo-grid__like-count\",\n          children: card.likes.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n_s(Card, \"fR8wccA8kuOmI8tLX/QG90sBSlk=\");\n_c = Card;\nexport default Card;\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["React","useContext","CurrentUserContext","jsxDEV","_jsxDEV","Card","props","_s","card","onCardClick","onCardLike","onCardDelete","currentUser","isOwn","owner","_id","isLiked","likes","some","like","cardLikeButtonClassName","cardDeleteButtonClassName","handleCardClick","handleLikeClick","handleDeleteClick","setCards","prevCards","filter","className","children","type","onClick","fileName","_jsxFileName","lineNumber","columnNumber","alt","name","src","link","length","_c","$RefreshReg$"],"sources":["/Users/olgapomytkina/YandexPraktikum/mesto-react/src/components/Card.js"],"sourcesContent":["import React, { useContext } from 'react';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction Card(props) {\n    const { card, onCardClick, onCardLike, onCardDelete } = props;\n\n    // подписываемся на контекст\n    const currentUser = useContext(CurrentUserContext);\n\n    // определяем, являемся ли мы владельцем карточки\n    const isOwn = card.owner._id === currentUser._id;\n    \n    // определяем постановку нами лайка карточке\n    const isLiked = card.likes.some((like) => like._id === currentUser._id);\n    \n    // определяем класс для кнопки лайка\n    const cardLikeButtonClassName = `photo-grid__like-button ${\n        isLiked ? 'photo-grid__like-button_active' : ''\n    }`;\n    \n    // определяем класс для удаления карточки\n    const cardDeleteButtonClassName = ` ${\n        isOwn ? 'photo-grid__delete-button' : ''\n    }`;\n\n    const handleCardClick = () => {\n        onCardClick(card);\n    };\n\n    const handleLikeClick = () => {\n        onCardLike(card);\n    };\n\n    const handleDeleteClick = () => {\n        onCardDelete(card);\n        setCards((prevCards) => prevCards.filter)\n    };\n\n    return (\n        <li className=\"photo-grid__item card-element\">\n            {isOwn && (<button \n            className={cardDeleteButtonClassName} \n            type=\"button\" \n            onClick={handleDeleteClick}/>)}\n            <img \n            alt={card.name} \n            src={card.link} \n            className=\"photo-grid__image\" \n            onClick={handleCardClick} />\n                <div className=\"photo-grid__item-description\">\n                    <h2 className=\"photo-grid__item-name\">{card.name}</h2>\n                    <div className=\"photo-grid__like\">\n                        <button \n                        className={cardLikeButtonClassName} \n                        type=\"button\" \n                        onClick={handleLikeClick}/>\n                        <div className=\"photo-grid__like-count\">{card.likes.length}</div>\n                    </div>\n                </div>\n        </li>\n    )\n}\n\nexport default Card;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}