{"ast":null,"code":"var _jsxFileName = \"/Users/olgapomytkina/YandexPraktikum/mesto-react/src/components/Main.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport Card from './Card';\nimport Error from './Error';\nimport api from '../utils/Api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Main(props) {\n  _s();\n  const {\n    onEditProfile,\n    onAddPlace,\n    onEditAvatar,\n    onCardClick,\n    currentUser\n  } = props;\n\n  // переменные состояния карточек\n  const [cards, setCards] = React.useState([]);\n\n  //  переменные состояния данных пользователя\n  const [userName, setUserName] = React.useState('');\n  const [userDescription, setUserDescription] = React.useState('');\n  const [userAvatar, setUserAvatar] = React.useState('');\n\n  // переменная состояния ошибки\n  const [errorMessage, setErrorMessage] = React.useState('');\n\n  // получаем данные пользователя и карточки с сервера\n  React.useEffect(() => {\n    Promise.all([api.getUserInfo(), api.getInitialCards()]).then(_ref => {\n      let [user, cards] = _ref;\n      setUserName(user.name);\n      setUserDescription(user.about);\n      setUserAvatar(user.avatar);\n      setCards(cards);\n    }).catch(err => {\n      console.log(`Ошибка при получении данных: ${err}`);\n      setErrorMessage('Произошла ошибка при получении данных');\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"content\",\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"profile\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile__avatar-container\",\n        onClick: onEditAvatar,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: userAvatar,\n          alt: \"\\u0410\\u0432\\u0430\\u0442\\u0430\\u0440 \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044F\",\n          className: \"profile__avatar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile__info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"profile__name\",\n          name: \"profile-name\",\n          children: userName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"profile__about\",\n          name: \"profile-about\",\n          children: userDescription\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"profile__edit-button\",\n          type: \"button\",\n          onClick: onEditProfile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"profile__add-button\",\n        type: \"button\",\n        onClick: onAddPlace\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      \"aria-label\": \"\\u0424\\u043E\\u0442\\u043E\\u0441\\u0435\\u0442\\u043A\\u0430\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"photo-grid\",\n        children: cards.map(card => /*#__PURE__*/_jsxDEV(Card, {\n          card: card,\n          onCardClick: onCardClick\n        }, card._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(Error, {\n      message: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 30\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n_s(Main, \"XxiYQptuNpJGV4DEhH7MkHOYpZg=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","Card","Error","api","jsxDEV","_jsxDEV","Main","props","_s","onEditProfile","onAddPlace","onEditAvatar","onCardClick","currentUser","cards","setCards","useState","userName","setUserName","userDescription","setUserDescription","userAvatar","setUserAvatar","errorMessage","setErrorMessage","useEffect","Promise","all","getUserInfo","getInitialCards","then","_ref","user","name","about","avatar","catch","err","console","log","className","children","onClick","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","type","map","card","_id","message","_c","$RefreshReg$"],"sources":["/Users/olgapomytkina/YandexPraktikum/mesto-react/src/components/Main.js"],"sourcesContent":["import React from 'react';\nimport Card from './Card';\nimport Error from './Error';\nimport api from '../utils/Api';\n\nfunction Main(props) {\n    const { onEditProfile, onAddPlace, onEditAvatar, onCardClick, currentUser } = props;\n\n    // переменные состояния карточек\n    const [cards, setCards] = React.useState([]);\n\n    //  переменные состояния данных пользователя\n    const [userName, setUserName] = React.useState('');\n    const [userDescription, setUserDescription] = React.useState('');\n    const [userAvatar, setUserAvatar] = React.useState('');\n\n    // переменная состояния ошибки\n    const [errorMessage, setErrorMessage] = React.useState('');\n\n    // получаем данные пользователя и карточки с сервера\n    React.useEffect(() => {\n        Promise.all([api.getUserInfo(), api.getInitialCards()])\n            .then(([user, cards]) => {\n                setUserName(user.name);\n                setUserDescription(user.about);\n                setUserAvatar(user.avatar);\n                setCards(cards);\n            })\n            .catch((err) => {\n                console.log(`Ошибка при получении данных: ${err}`);\n                setErrorMessage('Произошла ошибка при получении данных');\n            })\n    }, []);\n\n    return (\n        <main className=\"content\">\n            <section className=\"profile\">\n                <div \n                className=\"profile__avatar-container\" \n                onClick={onEditAvatar}>\n                    <img \n                    src={userAvatar} \n                    alt=\"Аватар профиля\" \n                    className=\"profile__avatar\" />\n                </div>\n                <div className=\"profile__info\">\n                    <h1 className=\"profile__name\" name=\"profile-name\">{userName}</h1>\n                    <p className=\"profile__about\" name=\"profile-about\">{userDescription}</p>\n                    <button className=\"profile__edit-button\" type=\"button\" onClick={onEditProfile} />\n                </div>\n                <button className=\"profile__add-button\" type=\"button\" onClick={onAddPlace} />\n            </section>\n\n            <section aria-label=\"Фотосетка\">\n                <ul className=\"photo-grid\">\n                    {cards.map(card => (\n                        <Card key={card._id} card={card} onCardClick={onCardClick} />\n                    ))}\n                </ul>\n            </section>\n            {errorMessage && <Error message={errorMessage} />}\n        </main>\n    )\n}\n\nexport default Main;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}