{"ast":null,"code":"class Api {\n  constructor(_ref) {\n    let {\n      baseUrl,\n      headers\n    } = _ref;\n    this._baseUrl = baseUrl;\n    this._headers = headers;\n  }\n  getUserInfo() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: this._headers\n    }).then(this._handleResponse);\n  }\n  _handleResponse(res) {\n    return res.ok ? res.json() : Promise.reject(`Ошибка: ${res.status}`);\n  }\n  getInitialCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      headers: this._headers\n    }).then(this._handleResponse);\n  }\n  editUserInfo(_ref2) {\n    let {\n      name,\n      about\n    } = _ref2;\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name,\n        about\n      })\n    }).then(this._handleResponse);\n  }\n  addCard(_ref3) {\n    let {\n      name,\n      link\n    } = _ref3;\n    return fetch(`${this._baseUrl}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name,\n        link\n      })\n    }).then(this._handleResponse);\n  }\n  putLike(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n      method: 'PUT',\n      headers: this._headers\n    }).then(this._handleResponse);\n  }\n  deleteLike(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(this._handleResponse);\n  }\n  deleteCard(id) {\n    return fetch(`${this._baseUrl}/cards/${id}`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(this._handleResponse);\n  }\n  updateProfileAvatar(avatarUrl) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: avatarUrl\n      })\n    }).then(this._handleResponse);\n  }\n}\nconst api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-61',\n  headers: {\n    authorization: '52fc6959-8692-45e7-a047-982dcb1b275b',\n    'Content-Type': 'application/json'\n  }\n});\nexport default api;","map":{"version":3,"names":["Api","constructor","_ref","baseUrl","headers","_baseUrl","_headers","getUserInfo","fetch","then","_handleResponse","res","ok","json","Promise","reject","status","getInitialCards","editUserInfo","_ref2","name","about","method","body","JSON","stringify","addCard","_ref3","link","putLike","cardId","deleteLike","deleteCard","id","updateProfileAvatar","avatarUrl","avatar","api","authorization"],"sources":["/Users/olgapomytkina/YandexPraktikum/mesto-react/src/utils/Api.js"],"sourcesContent":["class Api {\n    constructor({baseUrl, headers}) {\n      this._baseUrl = baseUrl;\n      this._headers = headers;\n    }\n  \n    getUserInfo() {\n      return fetch(`${this._baseUrl}/users/me`, {\n        headers: this._headers\n      })\n        .then(this._handleResponse);\n    }\n  \n    _handleResponse(res) {\n      return res.ok ? res.json() : Promise.reject(`Ошибка: ${res.status}`);\n    }\n  \n    getInitialCards() {\n      return fetch(`${this._baseUrl}/cards`, {\n        headers: this._headers\n      })\n        .then(this._handleResponse);\n    }\n  \n    editUserInfo({ name, about }) {\n      return fetch(`${this._baseUrl}/users/me`, {\n        method: 'PATCH',\n        headers: this._headers,\n        body: JSON.stringify({ name, about })\n      })\n        .then(this._handleResponse);\n    }\n  \n    addCard({ name, link }) {\n      return fetch(`${this._baseUrl}/cards`, {\n        method: 'POST',\n        headers: this._headers,\n        body: JSON.stringify({ name, link })\n      })\n      .then(this._handleResponse);\n    }\n  \n    putLike(cardId) {\n      return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n        method: 'PUT',\n        headers: this._headers,\n      })\n      .then(this._handleResponse);\n    }\n  \n    deleteLike(cardId) {\n      return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n        method: 'DELETE',\n        headers: this._headers\n      })\n      .then(this._handleResponse);\n    }\n  \n    deleteCard(id) {\n      return fetch(`${this._baseUrl}/cards/${id}`, {\n        method: 'DELETE',\n        headers: this._headers\n      })\n      .then(this._handleResponse);\n    }\n  \n    updateProfileAvatar(avatarUrl) {\n      return fetch(`${this._baseUrl}/users/me/avatar`, {\n        method: 'PATCH',\n        headers: this._headers,\n        body: JSON.stringify({avatar: avatarUrl})\n      })\n      .then(this._handleResponse);\n      }\n    }\n\n    const api = new Api({\n        baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-61',\n        headers: {\n          authorization: '52fc6959-8692-45e7-a047-982dcb1b275b',\n          'Content-Type': 'application/json'\n        }\n    })\n\n  export default api;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}