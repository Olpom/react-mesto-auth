{"ast":null,"code":"import _classCallCheck from\"/Users/olgapomytkina/YandexPraktikum/mesto-react/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/Users/olgapomytkina/YandexPraktikum/mesto-react/node_modules/@babel/runtime/helpers/esm/createClass.js\";var Api=/*#__PURE__*/function(){function Api(_ref){var baseUrl=_ref.baseUrl,headers=_ref.headers;_classCallCheck(this,Api);this._baseUrl=baseUrl;this._headers=headers;}_createClass(Api,[{key:\"getUserInfo\",value:function getUserInfo(){return fetch(\"\".concat(this._baseUrl,\"/users/me\"),{headers:this._headers}).then(this._handleResponse);}},{key:\"_handleResponse\",value:function _handleResponse(res){return res.ok?res.json():Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status));}},{key:\"getInitialCards\",value:function getInitialCards(){return fetch(\"\".concat(this._baseUrl,\"/cards\"),{headers:this._headers}).then(this._handleResponse);}},{key:\"editUserInfo\",value:function editUserInfo(_ref2){var name=_ref2.name,about=_ref2.about;return fetch(\"\".concat(this._baseUrl,\"/users/me\"),{method:'PATCH',headers:this._headers,body:JSON.stringify({name:name,about:about})}).then(this._handleResponse);}},{key:\"addCard\",value:function addCard(_ref3){var name=_ref3.name,link=_ref3.link;return fetch(\"\".concat(this._baseUrl,\"/cards\"),{method:'POST',headers:this._headers,body:JSON.stringify({name:name,link:link})}).then(this._handleResponse);}},{key:\"putLike\",value:function putLike(cardId){return fetch(\"\".concat(this._baseUrl,\"/cards/\").concat(cardId,\"/likes\"),{method:'PUT',headers:this._headers}).then(this._handleResponse);}},{key:\"deleteLike\",value:function deleteLike(cardId){return fetch(\"\".concat(this._baseUrl,\"/cards/\").concat(cardId,\"/likes\"),{method:'DELETE',headers:this._headers}).then(this._handleResponse);}},{key:\"deleteCard\",value:function deleteCard(id){return fetch(\"\".concat(this._baseUrl,\"/cards/\").concat(id),{method:'DELETE',headers:this._headers}).then(this._handleResponse);}},{key:\"updateProfileAvatar\",value:function updateProfileAvatar(avatarUrl){return fetch(\"\".concat(this._baseUrl,\"/users/me/avatar\"),{method:'PATCH',headers:this._headers,body:JSON.stringify({avatar:avatarUrl})}).then(this._handleResponse);}}]);return Api;}();var api=new Api({baseUrl:'https://mesto.nomoreparties.co/v1/cohort-61',headers:{authorization:'52fc6959-8692-45e7-a047-982dcb1b275b','Content-Type':'application/json'}});export default api;","map":{"version":3,"names":["Api","_ref","baseUrl","headers","_classCallCheck","_baseUrl","_headers","_createClass","key","value","getUserInfo","fetch","concat","then","_handleResponse","res","ok","json","Promise","reject","status","getInitialCards","editUserInfo","_ref2","name","about","method","body","JSON","stringify","addCard","_ref3","link","putLike","cardId","deleteLike","deleteCard","id","updateProfileAvatar","avatarUrl","avatar","api","authorization"],"sources":["/Users/olgapomytkina/YandexPraktikum/mesto-react/src/utils/Api.js"],"sourcesContent":["class Api {\n    constructor({baseUrl, headers}) {\n      this._baseUrl = baseUrl;\n      this._headers = headers;\n    }\n  \n    getUserInfo() {\n      return fetch(`${this._baseUrl}/users/me`, {\n        headers: this._headers\n      })\n        .then(this._handleResponse);\n    }\n  \n    _handleResponse(res) {\n      return res.ok ? res.json() : Promise.reject(`Ошибка: ${res.status}`);\n    }\n  \n    getInitialCards() {\n      return fetch(`${this._baseUrl}/cards`, {\n        headers: this._headers\n      })\n        .then(this._handleResponse);\n    }\n  \n    editUserInfo({ name, about }) {\n      return fetch(`${this._baseUrl}/users/me`, {\n        method: 'PATCH',\n        headers: this._headers,\n        body: JSON.stringify({ name, about })\n      })\n        .then(this._handleResponse);\n    }\n  \n    addCard({ name, link }) {\n      return fetch(`${this._baseUrl}/cards`, {\n        method: 'POST',\n        headers: this._headers,\n        body: JSON.stringify({ name, link })\n      })\n      .then(this._handleResponse);\n    }\n  \n    putLike(cardId) {\n      return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n        method: 'PUT',\n        headers: this._headers,\n      })\n      .then(this._handleResponse);\n    }\n  \n    deleteLike(cardId) {\n      return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n        method: 'DELETE',\n        headers: this._headers\n      })\n      .then(this._handleResponse);\n    }\n  \n    deleteCard(id) {\n      return fetch(`${this._baseUrl}/cards/${id}`, {\n        method: 'DELETE',\n        headers: this._headers\n      })\n      .then(this._handleResponse);\n    }\n  \n    updateProfileAvatar(avatarUrl) {\n      return fetch(`${this._baseUrl}/users/me/avatar`, {\n        method: 'PATCH',\n        headers: this._headers,\n        body: JSON.stringify({avatar: avatarUrl})\n      })\n      .then(this._handleResponse);\n      }\n    }\n\n    const api = new Api({\n        baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-61',\n        headers: {\n          authorization: '52fc6959-8692-45e7-a047-982dcb1b275b',\n          'Content-Type': 'application/json'\n        }\n    })\n\n  export default api;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}